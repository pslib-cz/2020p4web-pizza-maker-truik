[{"C:\\škola\\web\\pizza\\src\\index.js":"1","C:\\škola\\web\\pizza\\src\\App.js":"2","C:\\škola\\web\\pizza\\src\\reportWebVitals.js":"3","C:\\škola\\web\\pizza\\src\\pages\\home.jsx":"4","C:\\škola\\web\\pizza\\src\\components\\nav.jsx":"5","C:\\škola\\web\\pizza\\src\\pages\\ingredients.jsx":"6","C:\\škola\\web\\pizza\\src\\components\\ingredienceProvider.jsx":"7","C:\\škola\\web\\pizza\\src\\components\\display.jsx":"8","C:\\škola\\web\\pizza\\src\\components\\add.jsx":"9","C:\\škola\\web\\pizza\\src\\pages\\pizza.jsx":"10","C:\\škola\\web\\pizza\\src\\pages\\calzone.jsx":"11","C:\\škola\\web\\pizza\\src\\pages\\error.jsx":"12","C:\\škola\\web\\pizza\\src\\components\\buy.jsx":"13"},{"size":547,"mtime":1610820456569,"results":"14","hashOfConfig":"15"},{"size":1080,"mtime":1610825991136,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":162,"mtime":1610817403375,"results":"18","hashOfConfig":"15"},{"size":742,"mtime":1610820160798,"results":"19","hashOfConfig":"15"},{"size":981,"mtime":1610821597975,"results":"20","hashOfConfig":"15"},{"size":626,"mtime":1610817880561,"results":"21","hashOfConfig":"15"},{"size":260,"mtime":1610821276587,"results":"22","hashOfConfig":"15"},{"size":1019,"mtime":1610821704928,"results":"23","hashOfConfig":"15"},{"size":1731,"mtime":1610821475271,"results":"24","hashOfConfig":"15"},{"size":1751,"mtime":1610821485718,"results":"25","hashOfConfig":"15"},{"size":255,"mtime":1610816916892,"results":"26","hashOfConfig":"15"},{"size":456,"mtime":1610821062839,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"17hcflj",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},"C:\\škola\\web\\pizza\\src\\index.js",[],["61","62"],"C:\\škola\\web\\pizza\\src\\App.js",[],"C:\\škola\\web\\pizza\\src\\reportWebVitals.js",[],"C:\\škola\\web\\pizza\\src\\pages\\home.jsx",[],"C:\\škola\\web\\pizza\\src\\components\\nav.jsx",[],"C:\\škola\\web\\pizza\\src\\pages\\ingredients.jsx",["63"],"import React, { useContext } from \"react\";\r\nimport { IngredienceContext } from \"../components/ingredienceProvider\";\r\nimport Display from \"../components/display\";\r\nimport Add from \"../components/add\";\r\nimport {Container, Table} from \"reactstrap\";\r\n\r\nconst Ingredients = () => {\r\n    const [ingredients, SetIngredients] = useContext(IngredienceContext);\r\n    return (\r\n        <Container>\r\n            <Table dark hover striped>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={2}>Ingredience</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Jméno</td>\r\n                        <td>Kategorie</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {ingredients.map(m => (<Display name={m.name} category={m.category}></Display>))}\r\n                </tbody>\r\n            </Table>\r\n            <Add />\r\n        </Container>\r\n    );\r\n}\r\nexport default Ingredients;","C:\\škola\\web\\pizza\\src\\components\\ingredienceProvider.jsx",[],"C:\\škola\\web\\pizza\\src\\components\\display.jsx",[],"C:\\škola\\web\\pizza\\src\\components\\add.jsx",["64"],"import React, {useContext, useState } from \"react\";\r\nimport {Form, Input} from \"reactstrap\";\r\nimport {IngredienceContext} from \"./ingredienceProvider\";\r\n\r\n\r\nconst Add = () => {\r\n    const[name, setName] = useState(\"\");\r\n    const[category, setCategory] = useState(\"\");\r\n    const[context, setContext] = useContext(IngredienceContext);\r\n    const changeName = e => {\r\n        setName(e.target.value);\r\n    }\r\n    const changeCategory = e => {\r\n        setCategory(e.target.value);\r\n    }\r\n    const addIngredient = e => {\r\n        e.preventDefault();\r\n        setContext(prev => [...prev, {name: name, category: category}]);\r\n    }\r\n    return(\r\n        <Form onSubmit={addIngredient}>\r\n            <label>Jméno</label>\r\n            <Input type=\"text\" name=\"name\" value={name} onChange={changeName} />\r\n            <label>Kategorie</label>\r\n            <Input type=\"text\" name=\"category\" value={category} onChange={changeCategory} />\r\n            <Input type=\"submit\" />\r\n        </Form>\r\n    );\r\n}\r\nexport default Add;","C:\\škola\\web\\pizza\\src\\pages\\pizza.jsx",["65"],"import React, { useContext, useState } from \"react\";\r\nimport Display from \"../components/display\";\r\nimport {IngredienceContext} from \"../components/ingredienceProvider\";\r\nimport Buy from \"../components/buy\";\r\nimport {Container, Table} from \"reactstrap\";\r\n\r\nconst Pizza = () => {\r\n    const[ingredients, SetIngredients] = useContext(IngredienceContext);\r\n    const [pizza, setPizza] = useState([]);\r\n    const add = props => {\r\n        if(pizza.length < 4){\r\n            setPizza(pizza => [...pizza, {name: props.name , category: props.category}]);\r\n        }\r\n    }\r\n    return(\r\n        <Container>\r\n            <Table dark hover striped>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={3}>Pizza</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Jméno</td>\r\n                        <td>Kategorie</td>\r\n                        <td>Objednat</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ingredients.map(e => (<Buy name={e.name} category={e.category} add={add}></Buy>))}\r\n                </tbody>\r\n            </Table>\r\n            <Table dark hover striped>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={2}>Objednáno</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Jméno</td>\r\n                        <td>Kategorie</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {pizza.map(e => (<Display name={e.name} category={e.category}></Display>))}\r\n                </tbody>\r\n            </Table>\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Pizza;","C:\\škola\\web\\pizza\\src\\pages\\calzone.jsx",["66"],"import React, { useContext, useState } from \"react\";\r\nimport Display from \"../components/display\";\r\nimport {IngredienceContext} from \"../components/ingredienceProvider\";\r\nimport Buy from \"../components/buy\";\r\nimport {Container, Table} from \"reactstrap\";\r\n\r\nconst Calzone = () => {\r\n    const[ingredients, SetIngredients] = useContext(IngredienceContext);\r\n    const [calzone, setCalzone] = useState([]);\r\n    const add = props => {\r\n        if(calzone.length < 4){\r\n            setCalzone(calzone => [...calzone, {name: props.name , category: props.category}]);\r\n        }\r\n    }\r\n    return(\r\n        <Container>\r\n            <Table dark hover striped>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={3}>Calzone</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Jméno</td>\r\n                        <td>Kategorie</td>\r\n                        <td>Objednat</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ingredients.map(e => (<Buy name={e.name} category={e.category} add={add}></Buy>))}\r\n                </tbody>\r\n            </Table>\r\n            <Table dark hover striped>\r\n                <thead>\r\n                    <tr>\r\n                        <td colSpan={2}>Objednáno</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Jméno</td>\r\n                        <td>Kategorie</td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {calzone.map(e => (<Display name={e.name} category={e.category}></Display>))}\r\n                </tbody>\r\n            </Table>\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Calzone;","C:\\škola\\web\\pizza\\src\\pages\\error.jsx",[],"C:\\škola\\web\\pizza\\src\\components\\buy.jsx",["67"],"import { Button, Table } from \"reactstrap\";\r\nimport React from \"react\";\r\n\r\nexport default function Buy(props) {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {props.name}\r\n            </td>\r\n            <td>\r\n                {props.category}\r\n            </td>\r\n            <td>\r\n                <Button onClick={e => props.add({ name: props.name, category: props.category })}>Objednat</Button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}",["68","69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":8,"column":25,"nodeType":"76","messageId":"77","endLine":8,"endColumn":39},{"ruleId":"74","severity":1,"message":"78","line":9,"column":11,"nodeType":"76","messageId":"77","endLine":9,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":8,"column":24,"nodeType":"76","messageId":"77","endLine":8,"endColumn":38},{"ruleId":"74","severity":1,"message":"75","line":8,"column":24,"nodeType":"76","messageId":"77","endLine":8,"endColumn":38},{"ruleId":"74","severity":1,"message":"79","line":1,"column":18,"nodeType":"76","messageId":"77","endLine":1,"endColumn":23},{"ruleId":"70","replacedBy":"80"},{"ruleId":"72","replacedBy":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'SetIngredients' is assigned a value but never used.","Identifier","unusedVar","'context' is assigned a value but never used.","'Table' is defined but never used.",["82"],["83"],"no-global-assign","no-unsafe-negation"]